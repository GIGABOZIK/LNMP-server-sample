# # SERVICES
services:
# ## web-nginx
    web:
        container_name: web-nginx
        image: nginx:alpine
        volumes:
            #NGINX-LOGS
            - ./running/var/log/nginx:/var/log/nginx
            #NGINX-CFG
            # - ./running/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro # base nginx-conf
            - ./running/etc/nginx/conf.d:/etc/nginx/conf.d:ro # vhosts-conf
            # DOMAINS
            - ./apps/domains:/var/www
        ports:
            - "80:80"
            # - "443:443"
        depends_on:
            - php
        restart: unless-stopped
# ## cgi-php-fpm
    php:
        container_name: cgi-php-fpm
        image: php:fpm-alpine
        volumes:
            # DOMAINS
            - ./apps/domains:/var/www
        depends_on:
            - db
        restart: unless-stopped
# ## db-mariadb
    db:
        container_name: db-mariadb
        image: mariadb:latest
        volumes:
            # DB-DATA
            - ./apps/db-mariadb-data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: example_root_password
            # MYSQL_DATABASE: example_database
            # MYSQL_USER: example_user
            # MYSQL_PASSWORD: example_password
        restart: unless-stopped
# ## dbms-phpmyadmin
    phpmyadmin:
        container_name: dbms-phpmyadmin
        image: phpmyadmin:latest
        # environment:
            # PMA_HOST: mariadb # Если service называется db, то указывать не нужно
            # PMA_USER: example_user
            # PMA_PASSWORD: example_password
            # MYSQL_ROOT_PASSWORD: example_root_password
        ports:
            - "8001:80"
        restart: unless-stopped
#

# # # # # # # # Start
# ```bash: sudo cp -r ./build ./running && sudo docker-compose up```
# ```shell: Copy-Item -Path "./build" -Destination "./running" -Recurse; docker-compose up```
# # # # # # # # Restart
# ```bash: sudo docker-compose down && sudo rm -r ./running && sudo cp -r ./build ./running && sudo docker-compose up```
# ```shell: docker-compose down; rm "./running" -Recurse; Copy-Item -Path "./build" -Destination "./running" -Recurse; docker-compose up```
#